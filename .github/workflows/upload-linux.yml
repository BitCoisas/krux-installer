name: Upload electron app as artifact on Linux

on:
  workflow_call:

    inputs:
      build:
        description: 'The build type (AppImage, deb, snap)'
        type: string
        required: true

      digest-ext:
        description: 'The extension for sha256 digest file'
        type: string
        default: 'sha256.txt'

jobs:

  upload:
    runs-on: ubuntu-latest
  
    steps:

      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Setup cached node.js with dependencies
        uses: qlrd/setup-cached-node@main
        with:
          node-version: '18.15.0'
          cache-path: ${{ github.workspace }}/node_modules
          cache-key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }} 

      - name: Setup variables
        id: setup
        shell: bash
        run: | 
          KRUX_VERSION=`node -e "console.log(require('./package.json').version)"`
          KRUX_NAME="KruxInstaller-$KRUX_VERSION" >> $GITHUB_OUTPUT 
          echo "app-name=$KRUX_NAME" >> $GITHUB_OUTPUT

      - name: Restore cache build
        id: restore-cache-build
        uses: actions/cache/restore@v3 
        with:
          path: |
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }} 
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }}.${{ inputs.digest-ext }}
            dist_electron/linux-unpacked
          key: ${{ runner.os }}-build-${{ hashFiles('src/**', 'public/**', 'vue.config.js') }}

      - name: Upload artifacts
        if: ${{ steps.restore-cache-build.outputs.cache-hit == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ steps.setup.outputs.app-name }}-${{ inputs.build }}
          path: |
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }}
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }}.${{ inputs.digest-ext }}
