name: Create electron configuration on Linux

on:
  workflow_call:

    inputs:
      build:
        description: 'The build type (AppImage, deb, snap)'
        type: string
        required: true

      digest-ext:
        description: 'The extension for sha256 digest file'
        type: string
        default: 'sha256.txt'


jobs:

  build-linux:
    runs-on: ubuntu-latest
  
    steps:

      - name: Checkout Git repository
        uses: actions/checkout@v2
      
      - name: Setup cached node.js with dependencies (Linux)
        uses: qlrd/setup-cached-node@main
        with:
          node-version: '18.15.0'
          cache-path: ${{ github.workspace }}/node_modules
          cache-key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }} 

      - name: Setup variables (Linux)
        id: setup
        run: | 
          KRUX_VERSION=`node -e "console.log(require('./package.json').version)"`
          KRUX_NAME="KruxInstaller-$KRUX_VERSION" >> $GITHUB_OUTPUT 
          echo "app_version=$KRUX_VERSION" >> $GITHUB_OUTPUT
          echo "app-name=$KRUX_NAME" >> $GITHUB_OUTPUT
          echo "config-path=/home/runner/.config/krux-installer" >> $GITHUB_OUTPUT

      - name: Restore cached config (Linux) 
        id: restore-cache-config
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.setup.outputs.config-path }}
          key: ${{ runner.os }}-config-${{ steps.setup.outputs.app_version }}
   
      - name: Create config path (Linux)
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        run: mkdir -p ${{ steps.setup.outputs.config-path }}

      - name: Restore cache build (Linux) 
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        id: restore-cache-build
        uses: actions/cache/restore@v3
        with:
          path: |
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }}
            dist_electron/${{ steps.setup.outputs.app-name }}.${{ inputs.build }}.${{ inputs.digest-ext }}
            dist_electron/linux-unpacked
          key: ${{ runner.os }}-build-${{ hashFiles('dist_electron') }}

      - name: Create configuration 
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        run: yarn run test init

      - name: List configuration files (Linux)
        if: ${{ steps.restore-cache-config-linux.outputs.cache-hit != 'true' }}
        run: ls -la ${{ steps.setup.outputs.config-path }}
         
      - name: Show main configuration file 
        if: ${{ steps.restore-cache-config-linux.outputs.cache-hit != 'true' }}
        run: cat ${{ format('{0}/config.json', steps.setup.outputs.config-path) }}

      - name: Save cached config (Linux)  
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with: 
          path: ${{ steps.setup.outputs.config-path }} 
          key: ${{ runner.os }}-config-${{ steps.setup.outputs.app_version }}
