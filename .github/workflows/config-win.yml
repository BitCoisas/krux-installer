name: Create electron configuration on Windows

on:
  workflow_call:

    inputs:

      digest-ext:
        description: 'The extension for sha256 digest file'
        type: string
        default: 'sha256.txt'

jobs:

  config-win:
    runs-on: windows-latest
  
    steps:

      - name: Checkout Git repository
        uses: actions/checkout@v3
      
      - name: Setup cached node.js with dependencies (Windows)
        uses: qlrd/setup-cached-node@main
        with:
          node-version: '18.15.0'
          cache-path: ${{ github.workspace }}/node_modules
          cache-key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock', 'node_modules/png-to-ico/bin') }}

      - name: Setup variables (Windows)
        id: setup
        shell: pwsh
        run: |
          $app_version = node -e "console.log(require('./package.json').version)"
          $app_name="KruxInstaller Setup $app_version"
          echo "app_version=$app_version" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "app_name=$app_name" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "config-path=$Env:APPDATA\krux-installer" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Restore cached config (Windows) 
        id: restore-cache-config
        uses: actions/cache/restore@v3
        with: 
          path: ${{ steps.setup.outputs.config-path }} 
          key: ${{ runner.os }}-config-${{ steps.setup.outputs.app_version }}

      - name: Create config path (Windows)
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: New-Item -ItemType Directory -Path ${{ steps.setup.outputs.config-path }} -Force

      - name: Restore cache build (Windows) 
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        id: restore-cache-build
        uses: actions/cache/restore@v3
        with:
          path: |
            dist_electron/${{ steps.setup.outputs.app_name }}.exe
            dist_electron/${{ steps.setup.outputs.app_name }}.exe.${{ inputs.digest-ext }}
            dist_electron/win-unpacked
          key: ${{ runner.os }}-build-${{ hashFiles('dist_electron') }}

      - name: Create configuration
        if: ${{ steps.restore-cache-config.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: yarn run test init

      - name: List configuration files
        if: ${{ steps.restore-cache-config-win.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: Get-ChildItem -Force -LiteralPath ${{ steps.setup.outputs.config-path }}
          
      - name: Show main configuration file
        if: ${{ steps.restore-cache-config-win.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: Get-Content -Path ${{ format('{0}\config.json', steps.setup.outputs.config-path) }}

      - name: Save cached config (Windows)  
        if: ${{ steps.restore-cache-config-win.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with: 
          path: ${{ steps.setup.outputs.config-path }} 
          key: ${{ runner.os }}-config-${{ steps.setup.outputs.app_version }}
