name: Tests

on:
  push:
    branches:
      - kivy
      
  pull_request:

jobs:
  lint-black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry
          poetry install

      - name: Check format in src/
        run: poetry run poe format-src --check --verbose

      - name: Check format in tests/
        run: poetry run poe format-tests --check --verbose
          
  lint-pylint:

    needs: lint-black
    
    strategy:
      matrix:
        version: ["3.10", "3.11", "3.12"]
        
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.version }}'
      
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry

      - name: Install project and its dependencies
        run: poetry install
        
      - name: Lint
        run: poetry run poe lint
                   
  run-tests:

    needs: lint-pylint
    
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-12"]
        version: ["3.10", "3.11", "3.12"]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.version }}'
      
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry
      
      - name: Install project and its dependencies
        run: poetry install
      
      - name: Run tests
        run: poetry run poe test

  coverage:

    needs: run-tests

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
    
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry
      
      - name: Install project and its dependencies
        run: poetry install
      
      - name: Build coverage file
        run: poetry run poe coverage-xml
      
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
