name: Build electron application as deb package on linux

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:

  build-linux:
    runs-on: ubuntu-latest
   
    steps:

      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20.10.0"

      - name: Variables helpers
        id: setup
        run: |
          KRUX_VERSION=`node -e "console.log(require('./package.json').version)"`
          echo "app-version=$KRUX_VERSION" >> $GITHUB_OUTPUT
          KRUX_NAME=krux-installer
          echo "app-name=${KRUX_NAME}_${KRUX_VERSION}_amd64" >> $GITHUB_OUTPUT
          echo "::group::Variables"
          echo "app-version=$KRUX_VERSION"
          echo "app-name=$KRUX_NAME"
          echo "::endgroup::"

      - name: Install dependencies 
        run: yarn install

      - name: Build electron app
        env:
          GH_TOKEN: ${{ secrets.token }}
        run: yarn run build --linux deb

      - name: Hash electron app (Linux)
        uses: qlrd/sha256sum-action@v2
        with:
          working-directory: ./release/${{ steps.setup.outputs.app-version }}
          file: ${{ steps.setup.outputs.app-name }}.deb
          ext: sha256.txt

      - name: List release files
        run: |
          echo "::group::Release files"
          ls -la release/${{ steps.setup.outputs.app-version }}
          echo "::endgroup::"

      - name: Install xvfb-maybe to allow headless test
        run: yarn add --dev xvfb-maybe

      - name: E2E test electron app
        env:
          DEBUG: 'krux:*'
        run: ./node_modules/.bin/xvfb-maybe ./node_modules/.bin/wdio run wdio.conf.mts

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: ${{ github.ref_name == 'main' }}
        with:
          name: ${{ runner.os }}-${{ steps.setup.outputs.app-name }}-deb
          retention-days: 5
          path: |
            release/${{ steps.setup.outputs.app-version }}/${{ steps.setup.outputs.app-name }}.deb
            release/${{ steps.setup.outputs.app-version }}/${{ steps.setup.outputs.app-name }}.deb.sha256.txt
